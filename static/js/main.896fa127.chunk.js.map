{"version":3,"sources":["components/Preloader/preloader.module.css","reportWebVitals.js","components/ViewCard/ViewCard.jsx","api/api.js","redux/weatherCard-reducer.js","components/ViewCard/ViewCardContainer.jsx","assets/images/preloader.svg","components/Preloader/Preloader.jsx","components/SearchField/SearchField.jsx","components/SearchField/SearchFieldContainer.jsx","components/WeatherCard/WeatherCard.jsx","components/WeatherCard/WeatherCardContainer.jsx","components/WeatherCardsContainer/WeatherCardsContainer.jsx","App.jsx","AppContainer.jsx","redux/store.js","index.jsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ViewCard","viewCity","weatherForViewMode","searchCity","to","onClick","Card","ListGroup","variant","Item","name","weather","description","main","temp","feels_like","wind","speed","humidity","pressure","temp_max","temp_min","instance","axios","baseURL","weatherAPI","city","get","catch","e","console","error","SET_CURRENT_CITY","SET_CURRENT_CITY_WEATHER","SET_IS_FETCHING","UPDATE_WEATHER_CARD","DELETE_WEATHER_CARD","TOGGLE_VIEW_MODE","SET_VIEW_CITY","SET_WEATHER_FOR_VIEW_MODE","SET_ERROR","initialState","currentCity","weatherInCurrentCities","isFetching","viewMode","viewCityName","setCurrentCity","type","setWeatherInCurrentCities","updateWeatherCard","id","setIsFetching","setError","dispatch","toggleViewMode","getWeather","a","statusText","data","weatherCardReducer","state","action","map","el","filter","connect","weatherCard","getWeatherForViewMode","useHistory","location","search","replace","useEffect","Preloader","props","className","style","preloader","src","PreloaderIcon","alt","Styles","styled","div","FieldInput","input","placeholder","FormControl","value","onChange","SearchFieldReduxForm","reduxForm","form","handleSubmit","Form","onSubmit","Row","Col","md","Group","controlId","Field","component","SearchField","WeatherCard","updateWeather","deleteCard","history","width","marginTop","push","cursor","display","justifyContent","Button","deleteWeatherCard","localStorage","getItem","split","join","setItem","cities","i","self","length","indx","App","Container","exact","path","WeatherCardsContainer","ViewCardContainer","reducersPack","combineReducers","formReducer","store","createStore","compose","applyMiddleware","ReduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.896fa127.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__NrsZe\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, ListGroup } from \"react-bootstrap\";\r\n\r\nconst ViewCard = ({ viewCity, weatherForViewMode, searchCity }) => {\r\n  if (!weatherForViewMode)\r\n    return (\r\n      <Link to=\"/\" onClick={() => viewCity(false, \"\")}>\r\n        X\r\n      </Link>\r\n    );\r\n  return (\r\n    <>\r\n      <Link to=\"/\" onClick={() => viewCity(false, \"\")}>\r\n        X\r\n      </Link>\r\n      <Card>\r\n        <ListGroup variant=\"flush\">\r\n          <ListGroup.Item>\r\n            City: {weatherForViewMode.name}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            Weather: {weatherForViewMode.weather[0].description}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            Temp: {weatherForViewMode.main.temp}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            {weatherForViewMode.main.feels_like}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            Wind: {weatherForViewMode.wind.speed} m/s\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            Humidity: {weatherForViewMode.main.humidity} %\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n          Pressure: {weatherForViewMode.main.pressure} hPa\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            Temp max: {weatherForViewMode.main.temp_max}\r\n          </ListGroup.Item>\r\n          <ListGroup.Item>\r\n            Temp min: {weatherForViewMode.main.temp_min}\r\n          </ListGroup.Item>\r\n        </ListGroup>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ViewCard;\r\n","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.openweathermap.org/data/2.5/\",\r\n});\r\n\r\nexport const weatherAPI = {\r\n  async getWeatherUseCityName(city) {\r\n    return await instance\r\n      .get(\r\n        `weather?q=${city}&appid=28a565b6358bc0568063e6d2db733151&lang=ru&mode=json&units=metric`\r\n      )\r\n      .catch((e) => console.error(e));\r\n  },\r\n};\r\n","import { weatherAPI } from \"../api/api\";\r\n\r\nconst SET_CURRENT_CITY = \"weather_card_SET_CURRENT_CITY\";\r\nconst SET_CURRENT_CITY_WEATHER = \"weather_card_SET_CURRENT_CITY_WEATHER\";\r\nconst SET_IS_FETCHING = \"weather_card_SET_IS_FETCHING\";\r\nconst UPDATE_WEATHER_CARD = \"weather_card_UPDATE_WEATHER_CARD\";\r\nconst DELETE_WEATHER_CARD = \"weather_card_DELETE_WEATHER_CARD\";\r\nconst TOGGLE_VIEW_MODE = \"weather_card_TOGGLE_VIEW_MODE\";\r\nconst SET_VIEW_CITY = \"weather_card_SET_VIEW_CITY\";\r\nconst SET_WEATHER_FOR_VIEW_MODE = \"weather_card_SET_WEATHER_FOR_VIEW_MODE\";\r\nconst SET_ERROR = \"weather_card_SET_ERROR\";\r\n\r\nlet initialState = {\r\n  currentCity: [],\r\n  weatherInCurrentCities: [],\r\n  isFetching: false,\r\n  viewMode: false,\r\n  viewCityName: \"\",\r\n  weatherForViewMode: null,\r\n  error: \"\",\r\n};\r\n\r\nconst weatherCardReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_CITY:\r\n      return {\r\n        ...state,\r\n        currentCity: [...state.currentCity, action.city],\r\n      };\r\n    case SET_CURRENT_CITY_WEATHER:\r\n      return {\r\n        ...state,\r\n        weatherInCurrentCities: [\r\n          ...state.weatherInCurrentCities,\r\n          action.weather,\r\n        ],\r\n      };\r\n    case UPDATE_WEATHER_CARD:\r\n      return {\r\n        ...state,\r\n        weatherInCurrentCities: [\r\n          ...state.weatherInCurrentCities.map((el) => {\r\n            if (el.id === action.id) {\r\n              return { ...action.weather };\r\n            }\r\n            return el;\r\n          }),\r\n        ],\r\n      };\r\n    case SET_IS_FETCHING:\r\n      return {\r\n        ...state,\r\n        isFetching: action.isFetching,\r\n      };\r\n    case DELETE_WEATHER_CARD:\r\n      return {\r\n        ...state,\r\n        weatherInCurrentCities: [\r\n          ...state.weatherInCurrentCities.filter(({ id }) => id !== action.id),\r\n        ],\r\n      };\r\n    case TOGGLE_VIEW_MODE:\r\n      return {\r\n        ...state,\r\n        viewMode: action.viewMode,\r\n      };\r\n    case SET_VIEW_CITY:\r\n      return {\r\n        ...state,\r\n        viewCityName: action.viewCityName,\r\n      };\r\n    case SET_WEATHER_FOR_VIEW_MODE:\r\n      return {\r\n        ...state,\r\n        weatherForViewMode: action.weatherForViewMode,\r\n      };\r\n    case SET_ERROR:\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const setCurrentCity = (city) => ({\r\n  type: SET_CURRENT_CITY,\r\n  city,\r\n});\r\nexport const setWeatherInCurrentCities = (weather) => ({\r\n  type: SET_CURRENT_CITY_WEATHER,\r\n  weather,\r\n});\r\nexport const updateWeatherCard = (id, weather) => ({\r\n  type: UPDATE_WEATHER_CARD,\r\n  id,\r\n  weather,\r\n});\r\nexport const deleteWeatherCard = (id) => ({\r\n  type: DELETE_WEATHER_CARD,\r\n  id,\r\n});\r\nexport const setIsFetching = (isFetching) => ({\r\n  type: SET_IS_FETCHING,\r\n  isFetching,\r\n});\r\nexport const toggleViewMode = (viewMode) => ({\r\n  type: TOGGLE_VIEW_MODE,\r\n  viewMode,\r\n});\r\nexport const setViewCity = (viewCityName) => ({\r\n  type: SET_VIEW_CITY,\r\n  viewCityName,\r\n});\r\nexport const setWeatherForViewMode = (weatherForViewMode) => ({\r\n  type: SET_WEATHER_FOR_VIEW_MODE,\r\n  weatherForViewMode,\r\n});\r\nexport const setError = (error) => ({\r\n  type: SET_ERROR,\r\n  error,\r\n});\r\n\r\nexport const getWeatherForViewMode = (city) => {\r\n  return async (dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n    let {\r\n      statusText,\r\n      data: { weather, wind, main, id,name },\r\n    } = await weatherAPI.getWeatherUseCityName(city);\r\n    if (statusText === \"OK\") {\r\n      dispatch(setWeatherForViewMode({ weather, wind, main, id,name }));\r\n    }\r\n    dispatch(setIsFetching(false));\r\n  };\r\n};\r\n\r\nexport const viewCity = (viewMode, viewCity) => {\r\n  return (dispatch) => {\r\n    dispatch(toggleViewMode(viewMode));\r\n    dispatch(setViewCity(viewCity));\r\n  };\r\n};\r\n\r\nexport const deleteCard = (id, city) => {\r\n  return (dispatch) => {\r\n    dispatch(deleteWeatherCard(id));\r\n    let currentCity = localStorage\r\n      .getItem(\"currentCity\")\r\n      .split(\",\")\r\n      .filter((el) => el !== city)\r\n      .join();\r\n    localStorage.setItem(\"currentCity\", currentCity);\r\n  };\r\n};\r\n\r\nexport const updateWeather = (city) => {\r\n  return async (dispatch) => {\r\n    let {\r\n      statusText,\r\n      data: { weather, wind, main, id },\r\n    } = await weatherAPI.getWeatherUseCityName(city);\r\n    if (statusText === \"OK\") {\r\n      dispatch(updateWeatherCard(id, { weather, wind, main, city, id }));\r\n    }\r\n  };\r\n};\r\n\r\nexport const getWeather = (city) => {\r\n  return async (dispatch) => {\r\n    dispatch(setIsFetching(true));\r\n    let {\r\n      statusText,\r\n      data: { weather, wind, main, id },\r\n    } = await weatherAPI\r\n      .getWeatherUseCityName(city)\r\n      .catch((e) => dispatch(setError(\"error - no data\")));\r\n    if (statusText === \"OK\") {\r\n      dispatch(setCurrentCity(city));\r\n      dispatch(setWeatherInCurrentCities({ weather, wind, main, city, id }));\r\n      dispatch(setIsFetching(false));\r\n    } else {\r\n      dispatch(setError(\"error - no data\"));\r\n    }\r\n  };\r\n};\r\nexport default weatherCardReducer;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ViewCard from \"./ViewCard\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  viewCity,\r\n  getWeatherForViewMode,\r\n} from \"../../redux/weatherCard-reducer\";\r\n\r\nconst ViewCardContainer = ({\r\n  getWeatherForViewMode,\r\n  viewCity,\r\n  viewMode,\r\n  weatherForViewMode,\r\n}) => {\r\n  const searchCity = useHistory().location.search.replace(\"?\", \"\");\r\n  useEffect(() => {\r\n    if (viewMode && searchCity) {\r\n      getWeatherForViewMode(searchCity);\r\n    }\r\n  }, [searchCity, getWeatherForViewMode, viewMode]);\r\n  return (\r\n    <ViewCard\r\n      weatherForViewMode={weatherForViewMode}\r\n      viewCity={viewCity}\r\n      searchCity={searchCity}\r\n    />\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  viewMode: state.weatherCard.viewMode,\r\n  weatherForViewMode: state.weatherCard.weatherForViewMode,\r\n});\r\nexport default connect(mapStateToProps, {\r\n  viewCity,\r\n  getWeatherForViewMode,\r\n})(ViewCardContainer);\r\n","export default __webpack_public_path__ + \"static/media/preloader.9bb0fb74.svg\";","import React from 'react';\r\nimport style from './preloader.module.css';\r\nimport PreloaderIcon from '../../assets/images/preloader.svg';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div>\r\n            <img className={style.preloader} src={PreloaderIcon} alt='preloader'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport { reduxForm, Field } from \"redux-form\";\r\nimport { Form, FormControl, Row, Col } from \"react-bootstrap\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Styles = styled.div`\r\n  .search_city {\r\n    margin-top: 50px;\r\n  }\r\n  .submit_button {\r\n    margin: 0 auto;\r\n    display: block;\r\n    vertical-align: middle;\r\n    line-height: ;\r\n    padding: 6px;\r\n    outline: none;\r\n    border-radius: 5px;\r\n    background: none;\r\n    color: lightslategray;\r\n    border: 1px solid gray;\r\n    transition: 1s;\r\n    &:hover {\r\n      background: grey;\r\n      color: #fff\r\n    }\r\n  }\r\n`;\r\n\r\nconst FieldInput = ({ input, type, placeholder }) => {\r\n  return (\r\n    <FormControl\r\n      type={type}\r\n      placeholder={placeholder}\r\n      value={input.value}\r\n      onChange={input.onChange}\r\n    />\r\n  );\r\n};\r\n\r\nconst SearchFieldForm = ({ handleSubmit }) => {\r\n  return (\r\n    <Styles>\r\n      <div className=\"search_city\">\r\n        <Form onSubmit={handleSubmit} className=\"search_form\">\r\n          <Row>\r\n            <Col md={7}>\r\n              <Form.Group controlId=\"formBasicEmail\">\r\n                <Field\r\n                  placeholder=\"Enter the name of the city\"\r\n                  name=\"search\"\r\n                  type=\"text\"\r\n                  component={FieldInput}\r\n                />\r\n              </Form.Group>\r\n            </Col>\r\n            <Col md={5}>\r\n              <button className=\"submit_button\">watch weather</button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    </Styles>\r\n  );\r\n};\r\nconst SearchFieldReduxForm = reduxForm({\r\n  form: \"search\",\r\n})(SearchFieldForm);\r\n\r\nconst SearchField = (props) => {\r\n  const onSubmit = (data) => {\r\n    props.getWeather(data.search);\r\n  };\r\n  return <SearchFieldReduxForm onSubmit={onSubmit} />;\r\n};\r\n\r\nexport default SearchField;\r\n","import { connect } from \"react-redux\";\r\nimport React from \"react\";\r\nimport SearchField from \"./SearchField\";\r\nimport { getWeather } from \"../../redux/weatherCard-reducer\";\r\n\r\nconst SearchFieldContainer = ({ getWeather}) => {\r\n  return <SearchField getWeather={getWeather} />;\r\n};\r\nexport default connect(null, { getWeather })(\r\n  SearchFieldContainer\r\n);\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Card,ListGroup,Button,Col } from \"react-bootstrap\";\r\n\r\nconst WeatherCard = ({\r\n  weather: { main, weather, city, id },\r\n  updateWeather,\r\n  deleteCard,\r\n  viewCity,\r\n}) => {\r\n  let history = useHistory();\r\n  const handleViewCity = () => {\r\n    history.push(`/view/?${city}`);\r\n    viewCity(true, city);\r\n  };\r\n  return (\r\n    <Col>\r\n    <div style={{ width: '18rem',marginTop:'25px' }} className=\"weather_card\">\r\n<Card >\r\n  <ListGroup onClick={() => handleViewCity()} variant=\"flush\">\r\n    <ListGroup.Item style={{cursor:'pointer'}} >City: {city}</ListGroup.Item>\r\n    <ListGroup.Item style={{cursor:'pointer'}} >Weather: {weather[0].description}</ListGroup.Item>\r\n    <ListGroup.Item style={{cursor:'pointer'}} >Temp: {main.temp}</ListGroup.Item>\r\n    <ListGroup.Item style={{cursor:'pointer'}} >Feels like: {main.feels_like}</ListGroup.Item>\r\n  </ListGroup>\r\n<div style={{display:'flex',justifyContent:'space-between'}}>\r\n<Button variant=\"secondary\" onClick={() => updateWeather(city)} >Refresh</Button>\r\n<Button variant=\"secondary\" onClick={() => deleteCard(id, city)} >Delete</Button>\r\n</div>\r\n</Card>\r\n    </div>\r\n</Col>\r\n  );\r\n};\r\nexport default WeatherCard;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport WeatherCard from \"./WeatherCard\";\r\nimport {\r\n  updateWeather,\r\n  deleteCard,\r\n  viewCity,\r\n} from \"../../redux/weatherCard-reducer\";\r\n\r\nconst WeatherCardContainer = ({\r\n  deleteCard,\r\n  updateWeather,\r\n  weather,\r\n  viewCity,\r\n}) => {\r\n  return (\r\n    <WeatherCard\r\n      deleteCard={deleteCard}\r\n      updateWeather={updateWeather}\r\n      weather={weather}\r\n      viewCity={viewCity}\r\n    />\r\n  );\r\n};\r\n\r\nexport default connect(null, { updateWeather, deleteCard, viewCity })(\r\n  WeatherCardContainer\r\n);\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Preloader from \"../Preloader/Preloader\";\r\nimport SearchFieldContainer from \"../SearchField/SearchFieldContainer\";\r\nimport WeatherCardContainer from \"../WeatherCard/WeatherCardContainer\";\r\nimport { getWeather } from \"../../redux/weatherCard-reducer\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nconst WeatherCardsContainer = ({\r\n  getWeather,\r\n  isFetching,\r\n  weatherInCurrentCities,\r\n  error\r\n}) => {\r\n  useEffect(() => {\r\n    let cities = localStorage.getItem(\"currentCity\");\r\n    if (cities && !error) {\r\n      cities.split(\",\").map((city, i, self) => {\r\n        if (self.length > weatherInCurrentCities.length) getWeather(city);\r\n      });\r\n    }\r\n  }, [getWeather, weatherInCurrentCities,error]);\r\n  return (\r\n    <>\r\n      <SearchFieldContainer />\r\n      {isFetching ? <Preloader /> : null}\r\n      <Row>\r\n      {weatherInCurrentCities?weatherInCurrentCities.map((weather, indx) => {\r\n        return (\r\n              <WeatherCardContainer key={indx} weather={weather} />\r\n        );\r\n      }):null}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  weatherInCurrentCities: state.weatherCard.weatherInCurrentCities,\r\n  isFetching: state.weatherCard.isFetching,\r\n  error: state.weatherCard.error,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getWeather })(WeatherCardsContainer);\r\n","import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport ViewCardContainer from \"./components/ViewCard/ViewCardContainer\";\nimport WeatherCardsContainer from \"./components/WeatherCardsContainer/WeatherCardsContainer\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Container } from \"react-bootstrap\";\n\nconst App = () => {\n  return (\n    <div className=\"app\">\n      <Container>\n        <Switch>\n          <Route exact path=\"/\" component={WeatherCardsContainer} />\n          <Route path=\"/view\" component={ViewCardContainer} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Container>\n    </div>\n  );\n};\nexport default App;\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport App from \"./App\";\nimport { connect } from \"react-redux\";\n\nconst AppContainer = ({ currentCity }: any) => {\n  useEffect(() => {\n    if (currentCity.length) {\n      localStorage.setItem(\"currentCity\", currentCity);\n    }\n  }, [currentCity]);\n  return <App />;\n};\n\nconst mapStateToProps = (state: any) => ({\n  currentCity: state.weatherCard.currentCity,\n});\n\nexport default connect(mapStateToProps)(AppContainer);\n","import { combineReducers, createStore, applyMiddleware, compose } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport ReduxThunk from \"redux-thunk\";\r\nimport weatherCardReducer from \"./weatherCard-reducer\";\r\n\r\nlet reducersPack = combineReducers({\r\n  weatherCard: weatherCardReducer,\r\n  form: formReducer,\r\n});\r\n\r\nconst store = createStore(reducersPack, compose(applyMiddleware(ReduxThunk)));\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport AppContainer from \"./AppContainer\";\nimport { BrowserRouter, HashRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <HashRouter>\n      <Provider store={store}>\n        <AppContainer />\n      </Provider>\n    </HashRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}